#!/usr/bin/env php
<?php

use Illuminate\Http\Request;
use Orchestra\Testbench\Concerns\CreatesApplication;
use Orchestra\Testbench\Concerns\HandlesRoutes;
use Recca0120\AsyncTesting\Console\AsyncRequestCommand;
use Recca0120\AsyncTesting\Tests\Fixtures\PrepareDatabase;
use Symfony\Component\Console\Application;
use Illuminate\Support\Facades\Auth;

require_once __DIR__.'/../../vendor/autoload.php';

$laravel = new class() {
    use CreatesApplication;
    use PrepareDatabase;
    use HandlesRoutes;

    private $app;

    protected function getEnvironmentSetUp($app)
    {
        $this->databaseSetUp($app);
    }


    protected function defineRoutes($router): void
    {
        $router->get('/', function (Request $request) {
            return $request->isJson()
                ? response()->json(['content' => 'Hello World'])
                : 'Hello World';
        });

        $router->get('/previous_url', function () {
            return app('session')->previousUrl();
        });

        $router->get('/server_variables', function () {
            return Request::capture()->server->all();
        });

        $router->get('/status_code/{code}', function ($code) {
            abort($code);
        });

        $router->get('/echo', function () {
            echo 'echo foo';

            return 'bar';
        });

        $router->get('/dump', function () {
            dump('dump(foo)');

            return 'bar';
        });

        $router->get('/dd', function () {
            dd('dd(foo)');

            return 'bar';
        });

        $router->post('/auth/login', function (Request $request) {
            return Auth::attempt($request->only('email', 'password')) ? Auth::user() : [];
        });

        $router->middleware('auth')->post('/user', function (Request $request) {
            $user = $request->user();
            $reflect = new ReflectionClass($user);
            $property = $reflect->getProperty('attributes');
            $property->setAccessible(true);

            return response()->json($property->getValue($user));
        });

        $router->middleware('auth:api')->post('/api/user', function (Request $request) {
            return response()->json($request->user());
        });
    }

    public function getApplication()
    {
        $this->app = $this->createApplication();

        $this->setUpApplicationRoutes();

        return $this->app;
    }
};

$application = new Application();
$command = new AsyncRequestCommand($laravel->getApplication());
$application->add($command);
$application->run();
