#!/usr/bin/env php
<?php

use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\Session;
use Orchestra\Testbench\Concerns\CreatesApplication;
use Orchestra\Testbench\Concerns\HandlesRoutes;
use Recca0120\AsyncTesting\Console\AsyncRequestCommand;
use Recca0120\AsyncTesting\Tests\Fixtures\PrepareDatabase;
use Symfony\Component\Console\Application;

require_once __DIR__.'/../../vendor/autoload.php';

$laravel = new class() {
    use CreatesApplication;
    use PrepareDatabase;
    use HandlesRoutes;

    private $app;

    protected function getEnvironmentSetUp($app)
    {
        $app['config']['auth.guards.api'] = [
            'driver' => 'token',
            'provider' => 'users',
            'hash' => false,
        ];

        $this->databaseSetUp($app);
    }

    protected function defineRoutes($router): void
    {
        $router->middleware('web')->get('/', function (Request $request) {
            return $request->isJson()
                ? response()->json(['content' => 'Hello World'])
                : 'Hello World';
        });

        $router->middleware('web')->get('/previous_url', function () {
            return app('session')->previousUrl();
        });

        $router->middleware('web')->get('/server_variables', function () {
            return Request::capture()->server->all();
        });

        $router->middleware('web')->get('/status_code/{code}', function ($code) {
            abort($code);
        });

        $router->middleware('web')->get('/echo', function () {
            echo 'echo foo';

            return 'bar';
        });

        $router->middleware('web')->get('/dump', function () {
            dump('dump(foo)');

            return 'bar';
        });

        $router->middleware('web')->get('/dd', function () {
            dd('dd(foo)');
        });

        $router->middleware('web')->post('/auth/login', function (Request $request) {
            return Auth::attempt($request->only('email', 'password')) ? Auth::user() : [];
        });

        $router->middleware('web', 'auth')->post('/user', function (Request $request) {
            $user = $request->user();
            $reflect = new ReflectionClass($user);
            $property = $reflect->getProperty('attributes');
            $property->setAccessible(true);

            return response()->json($property->getValue($user));
        });

        $router->middleware('web')->patch('/session', function (Request $request) {
            Session::put('session', $request->get('session'));

            return ['success' => true];
        });

        $router->middleware('web')->get('/session', function () {
            return ['session' => Session::get('session')];
        });

        $router->middleware('web')->get('/sleep', function () {
            sleep(random_int(1, 3));

            return ['success' => true];
        });

        $router->middleware('auth:api')->post('/api/user', function (Request $request) {
            return response()->json($request->user());
        });
    }

    public function getApplication()
    {
        $this->app = $this->createApplication();

        $this->setUpApplicationRoutes();

        return $this->app;
    }
};

$application = new Application();
$command = new AsyncRequestCommand($laravel->getApplication());
$application->add($command);
$application->run();
